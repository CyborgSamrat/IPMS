@model IdentitySample.Models.Feedback

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<h1> @ViewBag.complaintId</h1>
<h1>@ViewBag.test</h1>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Feedback</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.Issue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" data-val="true" data-val-required="The Issue field is required." id="Issue" name="Issue">
                    <option value="">--Select--</option>
                    <option value="Problem Solved">Problem Solved</option>
                    <option value="Need Time">Need Time</option>
                    <option value="Need Contact">Need Contact</option>
                    <option value="Can Not Be Solved">Can Not Be Solved</option>
                    <option value="Confirm Solved">Confirm Solved</option>
                    <option value="Problem Not Solved">Problem Not Solved</option>
                    <option value="Extra Information">Extra Information</option>
                    <option value="Others">Others</option>
                </select>
                @Html.ValidationMessageFor(model => model.Issue, "", new { @class = "text-danger" })

            </div>

        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.GivenBy, new { @Value = HttpContext.Current.User.Identity.Name })


        <div class="form-group">
            @Html.LabelFor(model => model.ComplaintId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ComplaintId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ComplaintId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
